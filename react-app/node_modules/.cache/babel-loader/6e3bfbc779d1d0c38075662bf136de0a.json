{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst url_1 = require(\"url\");\n\nconst joinPath_1 = require(\"./joinPath\");\n\nconst xhr_1 = require(\"./xhr\");\n\nexports.isBrowser = true;\n\nfunction omit(obj, keys) {\n  const result = {};\n\n  for (const key of Object.keys(obj)) {\n    if (keys.includes(key)) continue;\n    result[key] = obj[key];\n  }\n\n  return result;\n}\n\nfunction createRequest(baseUrl, agentOptions) {\n  const _a = url_1.parse(baseUrl),\n        {\n    auth\n  } = _a,\n        baseUrlParts = __rest(_a, [\"auth\"]);\n\n  const options = omit(agentOptions, [\"keepAlive\", \"keepAliveMsecs\", \"maxSockets\"]);\n  return function request({\n    method,\n    url,\n    headers,\n    body,\n    timeout,\n    expectBinary\n  }, cb) {\n    const urlParts = Object.assign({}, baseUrlParts, {\n      pathname: url.pathname ? baseUrlParts.pathname ? joinPath_1.joinPath(baseUrlParts.pathname, url.pathname) : url.pathname : baseUrlParts.pathname,\n      search: url.search ? baseUrlParts.search ? `${baseUrlParts.search}&${url.search.slice(1)}` : url.search : baseUrlParts.search\n    });\n\n    if (!headers[\"authorization\"]) {\n      headers[\"authorization\"] = `Basic ${btoa(auth || \"root:\")}`;\n    }\n\n    let callback = (err, res) => {\n      callback = () => undefined;\n\n      cb(err, res);\n    };\n\n    const req = xhr_1.default(Object.assign({\n      responseType: expectBinary ? \"blob\" : \"text\"\n    }, options, {\n      url: url_1.format(urlParts),\n      withCredentials: true,\n      useXDR: true,\n      body,\n      method,\n      headers,\n      timeout\n    }), (err, res) => {\n      if (!err) {\n        if (!res.body) res.body = \"\";\n        callback(null, res);\n      } else {\n        const error = err;\n        error.request = req;\n        callback(error);\n      }\n    });\n  };\n}\n\nexports.createRequest = createRequest;","map":{"version":3,"sources":["../../../src/util/request.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { format as formatUrl, parse as parseUrl } from \"url\";\nimport { joinPath } from \"./joinPath\";\nimport {\n  ArangojsError,\n  ArangojsResponse,\n  RequestOptions\n} from \"./request.node\";\nimport { Errback } from \"./types\";\nimport xhr from \"./xhr\";\n\nexport const isBrowser = true;\n\nfunction omit<T>(obj: T, keys: (keyof T)[]): T {\n  const result = {} as T;\n  for (const key of Object.keys(obj)) {\n    if (keys.includes(key as keyof T)) continue;\n    result[key as keyof T] = obj[key as keyof T];\n  }\n  return result;\n}\n\nexport function createRequest(baseUrl: string, agentOptions: any) {\n  const { auth, ...baseUrlParts } = parseUrl(baseUrl);\n  const options = omit(agentOptions, [\n    \"keepAlive\",\n    \"keepAliveMsecs\",\n    \"maxSockets\"\n  ]);\n  return function request(\n    { method, url, headers, body, timeout, expectBinary }: RequestOptions,\n    cb: Errback<ArangojsResponse>\n  ) {\n    const urlParts = {\n      ...baseUrlParts,\n      pathname: url.pathname\n        ? baseUrlParts.pathname\n          ? joinPath(baseUrlParts.pathname, url.pathname)\n          : url.pathname\n        : baseUrlParts.pathname,\n      search: url.search\n        ? baseUrlParts.search\n          ? `${baseUrlParts.search}&${url.search.slice(1)}`\n          : url.search\n        : baseUrlParts.search\n    };\n    if (!headers[\"authorization\"]) {\n      headers[\"authorization\"] = `Basic ${btoa(auth || \"root:\")}`;\n    }\n\n    let callback: Errback<ArangojsResponse> = (err, res) => {\n      callback = () => undefined;\n      cb(err, res);\n    };\n    const req = xhr(\n      {\n        responseType: expectBinary ? \"blob\" : \"text\",\n        ...options,\n        url: formatUrl(urlParts),\n        withCredentials: true,\n        useXDR: true,\n        body,\n        method,\n        headers,\n        timeout\n      },\n      (err: Error | null, res?: any) => {\n        if (!err) {\n          if (!res.body) res.body = \"\";\n          callback(null, res as ArangojsResponse);\n        } else {\n          const error = err as ArangojsError;\n          error.request = req;\n          callback(error);\n        }\n      }\n    );\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}