{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/school/new_test/react-app/src/APIs/graph/components/createUsers.js\";\nimport * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst styles = theme => ({});\n\nconst addUser = gql`\n    mutation ($username: String! $email: String! $telephone: Int $role: String $description: String){\n        newUser(\n            username: $username,\n            email: $email,\n            telephone: $telephone,\n            role: $role,\n            description: $description,\n            ){\n        username\n        email\n        telephone\n        role\n        description\n        }\n    }\n`;\n\nfunction AddUser(props) {\n  const {\n    classes\n  } = props;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(addUser, {\n    variables: {\n      username: props.username,\n      email: props.email,\n      telephone: props.telephone,\n      role: props.role,\n      description: props.description\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }, \"Error\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default withStyles(styles)(AddUser);","map":{"version":3,"sources":["/home/diego/Documents/school/new_test/react-app/src/APIs/graph/components/createUsers.js"],"names":["React","withStyles","useQuery","gql","Snackbar","MuiAlert","styles","theme","addUser","AddUser","props","classes","data","loading","error","variables","username","email","telephone","role","description"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK,EAAL,CAApB;;AAIA,MAAMC,OAAO,GAAGL,GAAI;;;;;;;;;;;;;;;;CAApB;;AAkBA,SAASM,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAM;AAACC,IAAAA;AAAD,MAAYD,KAAlB;AACA,QAAM;AAACE,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBZ,QAAQ,CAACM,OAAD,EAAU;AAC7CO,IAAAA,SAAS,EAAE;AACPC,MAAAA,QAAQ,EAAEN,KAAK,CAACM,QADT;AAEPC,MAAAA,KAAK,EAAEP,KAAK,CAACO,KAFN;AAGPC,MAAAA,SAAS,EAAER,KAAK,CAACQ,SAHV;AAIPC,MAAAA,IAAI,EAAET,KAAK,CAACS,IAJL;AAKPC,MAAAA,WAAW,EAAEV,KAAK,CAACU;AALZ;AADkC,GAAV,CAAvC;AAUA,MAAIP,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AAGX,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH;;AAKD,eAAgBb,UAAU,CAACK,MAAD,CAAX,CAAqBG,OAArB,CAAf","sourcesContent":["import * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst styles = theme => ({\n\n});\n\nconst addUser = gql`\n    mutation ($username: String! $email: String! $telephone: Int $role: String $description: String){\n        newUser(\n            username: $username,\n            email: $email,\n            telephone: $telephone,\n            role: $role,\n            description: $description,\n            ){\n        username\n        email\n        telephone\n        role\n        description\n        }\n    }\n`;\n\nfunction AddUser(props) {\n    const {classes} = props\n    const {data, loading, error} = useQuery(addUser, {\n        variables: {\n            username: props.username,\n            email: props.email,\n            telephone: props.telephone,\n            role: props.role,\n            description: props.description,\n        }\n    });\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error</p>;\n\n\n    return (\n        <div>\n\n        </div>\n    );\n}\n\n\n\n\nexport default (withStyles(styles))(AddUser);"]},"metadata":{},"sourceType":"module"}