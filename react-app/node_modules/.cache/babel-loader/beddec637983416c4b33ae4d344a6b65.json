{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst error_1 = require(\"./util/error\");\n\nconst messages = {\n  0: \"Network Error\",\n  400: \"Bad Request\",\n  401: \"Unauthorized\",\n  402: \"Payment Required\",\n  403: \"Forbidden\",\n  404: \"Not Found\",\n  405: \"Method Not Allowed\",\n  406: \"Not Acceptable\",\n  407: \"Proxy Authentication Required\",\n  408: \"Request Timeout\",\n  409: \"Conflict\",\n  410: \"Gone\",\n  411: \"Length Required\",\n  412: \"Precondition Failed\",\n  413: \"Payload Too Large\",\n  414: \"Request-URI Too Long\",\n  415: \"Unsupported Media Type\",\n  416: \"Requested Range Not Satisfiable\",\n  417: \"Expectation Failed\",\n  418: \"I'm a teapot\",\n  421: \"Misdirected Request\",\n  422: \"Unprocessable Entity\",\n  423: \"Locked\",\n  424: \"Failed Dependency\",\n  426: \"Upgrade Required\",\n  428: \"Precondition Required\",\n  429: \"Too Many Requests\",\n  431: \"Request Header Fields Too Large\",\n  444: \"Connection Closed Without Response\",\n  451: \"Unavailable For Legal Reasons\",\n  499: \"Client Closed Request\",\n  500: \"Internal Server Error\",\n  501: \"Not Implemented\",\n  502: \"Bad Gateway\",\n  503: \"Service Unavailable\",\n  504: \"Gateway Timeout\",\n  505: \"HTTP Version Not Supported\",\n  506: \"Variant Also Negotiates\",\n  507: \"Insufficient Storage\",\n  508: \"Loop Detected\",\n  510: \"Not Extended\",\n  511: \"Network Authentication Required\",\n  599: \"Network Connect Timeout Error\"\n};\nconst nativeErrorKeys = [\"fileName\", \"lineNumber\", \"columnNumber\", \"stack\", \"description\", \"number\"];\n\nfunction isArangoError(err) {\n  return Boolean(err && err.isArangoError);\n}\n\nexports.isArangoError = isArangoError;\n\nclass ArangoError extends error_1.default {\n  constructor(response) {\n    super();\n    this.name = \"ArangoError\";\n    this.isArangoError = true;\n    this.response = response;\n    this.statusCode = response.statusCode;\n    this.message = response.body.errorMessage;\n    this.errorNum = response.body.errorNum;\n    this.code = response.body.code;\n    const err = new Error(this.message);\n    err.name = this.name;\n\n    for (const key of nativeErrorKeys) {\n      if (err[key]) this[key] = err[key];\n    }\n  }\n\n}\n\nexports.ArangoError = ArangoError;\n\nclass HttpError extends error_1.default {\n  constructor(response) {\n    super();\n    this.name = \"HttpError\";\n    this.response = response;\n    this.statusCode = response.statusCode || 500;\n    this.message = messages[this.statusCode] || messages[500];\n    this.code = this.statusCode;\n    const err = new Error(this.message);\n    err.name = this.name;\n\n    for (const key of nativeErrorKeys) {\n      if (err[key]) this[key] = err[key];\n    }\n  }\n\n}\n\nexports.HttpError = HttpError;","map":{"version":3,"sources":["../../src/error.ts"],"names":[],"mappings":"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","sourcesContent":["import ExtendableError from \"./util/error\";\n\nconst messages: { [key: string]: string } = {\n  0: \"Network Error\",\n  400: \"Bad Request\",\n  401: \"Unauthorized\",\n  402: \"Payment Required\",\n  403: \"Forbidden\",\n  404: \"Not Found\",\n  405: \"Method Not Allowed\",\n  406: \"Not Acceptable\",\n  407: \"Proxy Authentication Required\",\n  408: \"Request Timeout\",\n  409: \"Conflict\",\n  410: \"Gone\",\n  411: \"Length Required\",\n  412: \"Precondition Failed\",\n  413: \"Payload Too Large\",\n  414: \"Request-URI Too Long\",\n  415: \"Unsupported Media Type\",\n  416: \"Requested Range Not Satisfiable\",\n  417: \"Expectation Failed\",\n  418: \"I'm a teapot\",\n  421: \"Misdirected Request\",\n  422: \"Unprocessable Entity\",\n  423: \"Locked\",\n  424: \"Failed Dependency\",\n  426: \"Upgrade Required\",\n  428: \"Precondition Required\",\n  429: \"Too Many Requests\",\n  431: \"Request Header Fields Too Large\",\n  444: \"Connection Closed Without Response\",\n  451: \"Unavailable For Legal Reasons\",\n  499: \"Client Closed Request\",\n  500: \"Internal Server Error\",\n  501: \"Not Implemented\",\n  502: \"Bad Gateway\",\n  503: \"Service Unavailable\",\n  504: \"Gateway Timeout\",\n  505: \"HTTP Version Not Supported\",\n  506: \"Variant Also Negotiates\",\n  507: \"Insufficient Storage\",\n  508: \"Loop Detected\",\n  510: \"Not Extended\",\n  511: \"Network Authentication Required\",\n  599: \"Network Connect Timeout Error\"\n};\n\nconst nativeErrorKeys = [\n  \"fileName\",\n  \"lineNumber\",\n  \"columnNumber\",\n  \"stack\",\n  \"description\",\n  \"number\"\n] as (keyof Error)[];\n\nexport function isArangoError(err: any): err is ArangoError {\n  return Boolean(err && err.isArangoError);\n}\n\nexport class ArangoError extends ExtendableError {\n  name = \"ArangoError\";\n  isArangoError = true;\n  errorNum: number;\n  code: number;\n  statusCode: number;\n  response: any;\n  constructor(response: any) {\n    super();\n    this.response = response;\n    this.statusCode = response.statusCode;\n    this.message = response.body.errorMessage;\n    this.errorNum = response.body.errorNum;\n    this.code = response.body.code;\n    const err = new Error(this.message);\n    err.name = this.name;\n    for (const key of nativeErrorKeys) {\n      if (err[key]) this[key] = err[key]!;\n    }\n  }\n}\n\nexport class HttpError extends ExtendableError {\n  name = \"HttpError\";\n  response: any;\n  code: number;\n  statusCode: number;\n  constructor(response: any) {\n    super();\n    this.response = response;\n    this.statusCode = response.statusCode || 500;\n    this.message = messages[this.statusCode] || messages[500];\n    this.code = this.statusCode;\n    const err = new Error(this.message);\n    err.name = this.name;\n    for (const key of nativeErrorKeys) {\n      if (err[key]) this[key] = err[key]!;\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}