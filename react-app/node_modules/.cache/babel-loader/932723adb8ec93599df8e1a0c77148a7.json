{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/school/new_test/react-app/src/APIs/graph/components/updateUsers.js\";\nimport * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Typography } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from \"react\";\n\nconst styles = theme => ({\n  submitButton: {\n    fontSize: 'smaller',\n    borderColor: '#fff',\n    color: '#fff',\n    background: '#550055',\n    height: 60,\n    justifyContent: 'center',\n    marginTop: 80,\n    width: '100%',\n    '&:hover': {\n      background: '#310131'\n    }\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: 400,\n    height: 600,\n    justifyContent: 'space-around',\n    margin: '0 auto'\n  }\n});\n\nconst updateUser = gql`\n    mutation ($id: ID! $role: String $description: String){\n        updateUser(\n            id: $id,\n            role: $role,\n            description: $description,\n        ){\n            id\n            username\n            email\n            telephone\n            role\n            description\n        }\n    }\n`;\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }\n  }));\n}\n\nfunction UpdateUser(props) {\n  const {\n    classes\n  } = props;\n  const [addData, {\n    data\n  }] = useMutation(updateUser);\n  const [newUserData, setNewUserData] = useState({});\n\n  const onInput = event => {\n    const objData = { ...newUserData\n    };\n    objData[event.target.id] = event.currentTarget.value;\n    setNewUserData(objData);\n    console.log(newUserData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Fill in updated user info:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    onSubmit: e => {\n      e.preventDefault();\n      addData({\n        variables: {\n          id: Number(newUserData.id),\n          role: newUserData.role,\n          description: newUserData.description\n        }\n      });\n      return /*#__PURE__*/React.createElement(Snackbar, {\n        open: true,\n        autoHideDuration: 6000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        severity: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }\n      }, \"User has been updated!\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"id\",\n    label: \"id\",\n    onChange: onInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"role\",\n    label: \"Role\",\n    onChange: onInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"description\",\n    label: \"Description\",\n    onChange: onInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.submitButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Update User\"))));\n}\n\nexport default withStyles(styles)(UpdateUser);","map":{"version":3,"sources":["/home/diego/Documents/school/new_test/react-app/src/APIs/graph/components/updateUsers.js"],"names":["React","withStyles","useQuery","useMutation","gql","Snackbar","MuiAlert","Typography","TextField","Button","useState","styles","theme","submitButton","fontSize","borderColor","color","background","height","justifyContent","marginTop","width","container","display","flexDirection","maxWidth","margin","updateUser","Alert","props","UpdateUser","classes","addData","data","newUserData","setNewUserData","onInput","event","objData","target","id","currentTarget","value","console","log","e","preventDefault","variables","Number","role","description"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {useState} from \"react\";\n\n\nconst styles = theme => ({\n    submitButton: {\n        fontSize: 'smaller',\n        borderColor: '#fff',\n        color: '#fff',\n        background: '#550055',\n        height: 60,\n        justifyContent: 'center',\n        marginTop: 80,\n        width: '100%',\n        '&:hover': {\n            background: '#310131',\n        },\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: 400,\n        height: 600,\n        justifyContent: 'space-around',\n        margin: '0 auto',\n    },\n});\n\nconst updateUser = gql`\n    mutation ($id: ID! $role: String $description: String){\n        updateUser(\n            id: $id,\n            role: $role,\n            description: $description,\n        ){\n            id\n            username\n            email\n            telephone\n            role\n            description\n        }\n    }\n`;\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction UpdateUser(props) {\n    const {classes} = props\n    const [addData, { data }] = useMutation(updateUser);\n    const [newUserData, setNewUserData] = useState({})\n\n    const  onInput = (event) => {\n        const objData = {...newUserData}\n        objData[event.target.id] = event.currentTarget.value\n        setNewUserData(objData)\n\n        console.log(newUserData)\n    }\n\n    return (\n        <div>\n            <Typography>Fill in updated user info:</Typography>\n            <div>\n                <form\n                    className={classes.container}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        addData({\n                            variables: {\n                                id: Number(newUserData.id),\n                                role: newUserData.role,\n                                description: newUserData.description\n                            }\n                        });\n                        return (\n                            <Snackbar open={true} autoHideDuration={6000}>\n                                <Alert severity=\"success\">\n                                    User has been updated!\n                                </Alert>\n                            </Snackbar>\n                        );\n                    }}\n                >\n                    <TextField id=\"id\" label=\"id\" onChange={onInput}/>\n                    <TextField id=\"role\" label=\"Role\" onChange={onInput}/>\n                    <TextField id=\"description\" label=\"Description\" onChange={onInput}/>\n                    <Button\n                        type=\"submit\"\n                        className={classes.submitButton}\n\n                    >\n                        Update User\n                    </Button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\n\n\n\nexport default (withStyles(styles))(UpdateUser);"]},"metadata":{},"sourceType":"module"}