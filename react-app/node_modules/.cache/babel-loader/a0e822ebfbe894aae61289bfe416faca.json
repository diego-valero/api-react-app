{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/school/new_test/react-api/src/APIs/graph/components/getAllUsers.js\";\nimport * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport arangojs, { aql } from \"arangojs\";\nimport { GraphQLInt, GraphQLNonNull, GraphQLObjectType, GraphQLSchema, GraphQLString } from \"graphql\";\nimport { graphql } from \"react-apollo\";\nimport Button from \"@material-ui/core/Button\";\nconst db = arangojs({\n  url: `http://127.0.0.1:8529`,\n  databaseName: 'nodeArangoWebAppDB'\n});\n\nasync function getUsers() {\n  let query = aql`\n      FOR user IN User\n      RETURN user\n    `;\n  let results = await db.query(query);\n  return results.next();\n}\n\nlet User = new GraphQLObjectType({\n  name: 'User',\n  fields: () => ({\n    key: {\n      type: GraphQLInt\n    },\n    username: {\n      type: GraphQLString\n    },\n    email: {\n      type: GraphQLString\n    }\n  })\n});\nlet schema = new GraphQLSchema({\n  query: new GraphQLObjectType({\n    name: 'Query',\n    fields: () => ({\n      user: {\n        type: User,\n        resolve: (root, args) => {\n          return getUsers();\n        }\n      }\n    })\n  })\n});\n\nlet query = () => `\n        query {\n          user {\n            key\n            username\n            email\n          }\n        }\n      `;\n\nexport const styles = theme => ({\n  button: {\n    fontSize: 'smaller',\n    borderColor: '#fff',\n    color: '#fff',\n    background: '#550055',\n    height: 60,\n    justifyContent: 'center',\n    '&:hover': {\n      background: '#310131'\n    }\n  }\n});\n\nclass GetAllUsers extends React.Component {\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.button,\n      onClick: this.onInputClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  async onInputClick() {\n    let result = await graphql(schema, query());\n    console.log(result);\n  }\n\n}\n\nexport default withStyles(styles)(GetAllUsers);","map":{"version":3,"sources":["/home/diego/Documents/school/new_test/react-api/src/APIs/graph/components/getAllUsers.js"],"names":["React","withStyles","arangojs","aql","GraphQLInt","GraphQLNonNull","GraphQLObjectType","GraphQLSchema","GraphQLString","graphql","Button","db","url","databaseName","getUsers","query","results","next","User","name","fields","key","type","username","email","schema","user","resolve","root","args","styles","theme","button","fontSize","borderColor","color","background","height","justifyContent","GetAllUsers","Component","render","classes","props","onInputClick","result","console","log"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,QAAP,IAAkBC,GAAlB,QAA4B,UAA5B;AACA,SAAQC,UAAR,EAAoBC,cAApB,EAAoCC,iBAApC,EAAuDC,aAAvD,EAAsEC,aAAtE,QAA0F,SAA1F;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,EAAE,GAAGT,QAAQ,CAAC;AAChBU,EAAAA,GAAG,EAAG,uBADU;AAEhBC,EAAAA,YAAY,EAAE;AAFE,CAAD,CAAnB;;AAKA,eAAeC,QAAf,GAA0B;AACtB,MAAIC,KAAK,GAAGZ,GAAI;;;KAAhB;AAIA,MAAIa,OAAO,GAAG,MAAML,EAAE,CAACI,KAAH,CAASA,KAAT,CAApB;AACA,SAAOC,OAAO,CAACC,IAAR,EAAP;AACH;;AAGD,IAAIC,IAAI,GAAG,IAAIZ,iBAAJ,CAAsB;AAC7Ba,EAAAA,IAAI,EAAE,MADuB;AAE7BC,EAAAA,MAAM,EAAE,OAAO;AACXC,IAAAA,GAAG,EAAE;AACDC,MAAAA,IAAI,EAAElB;AADL,KADM;AAIXmB,IAAAA,QAAQ,EAAE;AACND,MAAAA,IAAI,EAAEd;AADA,KAJC;AAOXgB,IAAAA,KAAK,EAAE;AACHF,MAAAA,IAAI,EAAEd;AADH;AAPI,GAAP;AAFqB,CAAtB,CAAX;AAeA,IAAIiB,MAAM,GAAG,IAAIlB,aAAJ,CAAkB;AAC3BQ,EAAAA,KAAK,EAAE,IAAIT,iBAAJ,CAAsB;AACzBa,IAAAA,IAAI,EAAE,OADmB;AAEzBC,IAAAA,MAAM,EAAE,OAAO;AACXM,MAAAA,IAAI,EAAE;AACFJ,QAAAA,IAAI,EAAEJ,IADJ;AAEFS,QAAAA,OAAO,EAAE,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrB,iBAAOf,QAAQ,EAAf;AACH;AAJC;AADK,KAAP;AAFiB,GAAtB;AADoB,CAAlB,CAAb;;AAcA,IAAIC,KAAK,GAAG,MAAO;;;;;;;;OAAnB;;AAUA,OAAO,MAAMe,MAAM,GAAGC,KAAK,KAAK;AAC5BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE,SADN;AAEJC,IAAAA,WAAW,EAAE,MAFT;AAGJC,IAAAA,KAAK,EAAE,MAHH;AAIJC,IAAAA,UAAU,EAAE,SAJR;AAKJC,IAAAA,MAAM,EAAE,EALJ;AAMJC,IAAAA,cAAc,EAAE,QANZ;AAOJ,eAAW;AACPF,MAAAA,UAAU,EAAE;AADL;AAPP;AADoB,CAAL,CAApB;;AAcP,MAAMG,WAAN,SAA0BvC,KAAK,CAACwC,SAAhC,CAA0C;AACtCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKC,KAAvB;AAEA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAED,OAAO,CAACV,MAA3B;AAAmC,MAAA,OAAO,EAAE,KAAKY,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAED,QAAMA,YAAN,GAAqB;AACjB,QAAIC,MAAM,GAAG,MAAMpC,OAAO,CAACgB,MAAD,EAASV,KAAK,EAAd,CAA1B;AACA+B,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH;;AAdqC;;AAiB1C,eAAgB5C,UAAU,CAAC6B,MAAD,CAAX,CAAqBS,WAArB,CAAf","sourcesContent":["import * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport arangojs, {aql} from \"arangojs\";\nimport {GraphQLInt, GraphQLNonNull, GraphQLObjectType, GraphQLSchema, GraphQLString} from \"graphql\";\nimport {graphql} from \"react-apollo\";\nimport Button from \"@material-ui/core/Button\";\n\nconst db = arangojs({\n    url: `http://127.0.0.1:8529`,\n    databaseName: 'nodeArangoWebAppDB'\n})\n\nasync function getUsers() {\n    let query = aql`\n      FOR user IN User\n      RETURN user\n    `\n    let results = await db.query(query)\n    return results.next()\n}\n\n\nlet User = new GraphQLObjectType({\n    name: 'User',\n    fields: () => ({\n        key: {\n            type: GraphQLInt\n        },\n        username: {\n            type: GraphQLString\n        },\n        email: {\n            type: GraphQLString\n        }\n    })\n})\n\nlet schema = new GraphQLSchema({\n    query: new GraphQLObjectType({\n        name: 'Query',\n        fields: () => ({\n            user: {\n                type: User,\n                resolve: (root, args) => {\n                    return getUsers()\n                },\n            }\n        })\n    })\n})\n\nlet query = () => `\n        query {\n          user {\n            key\n            username\n            email\n          }\n        }\n      `\n\nexport const styles = theme => ({\n    button: {\n        fontSize: 'smaller',\n        borderColor: '#fff',\n        color: '#fff',\n        background: '#550055',\n        height: 60,\n        justifyContent: 'center',\n        '&:hover': {\n            background: '#310131',\n        },\n    },\n});\n\nclass GetAllUsers extends React.Component {\n    render() {\n        const {classes} = this.props\n\n        return (\n            <React.Fragment>\n                <Button className={classes.button} onClick={this.onInputClick}/>\n            </React.Fragment>\n        );\n    }\n\n    async onInputClick() {\n        let result = await graphql(schema, query())\n        console.log(result)\n    }\n}\n\nexport default (withStyles(styles))(GetAllUsers);"]},"metadata":{},"sourceType":"module"}