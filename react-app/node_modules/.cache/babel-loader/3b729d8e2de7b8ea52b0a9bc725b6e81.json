{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/school/new_test/react-app/src/APIs/graph/components/createUsers.js\";\nimport * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = theme => ({\n  button: {\n    fontSize: 'smaller',\n    borderColor: '#fff',\n    color: '#fff',\n    background: '#550055',\n    height: 60,\n    justifyContent: 'center',\n    '&:hover': {\n      background: '#310131'\n    }\n  },\n  table: {\n    minWidth: 650\n  },\n  tableHeader: {\n    background: '#000',\n    color: '#fff'\n  },\n  tableHeaderCell: {\n    color: '#fff'\n  }\n});\n\nconst addUser = gql`\n    mutation ($username: String! $email: String! $telephone: Int $role: String $description: String){\n        newUser(\n            username: $username, \n            email: \"\",\n            telephone: ,\n            roles: \"\",\n            description: \"\",\n            ){\n        username\n        email\n        telephone\n        roles\n        description\n        }\n    }\n`;\n\nfunction AddUser(props) {\n  // const {data, loading, error} = useQuery(addUser, {\n  //     variables: {\n  //         username: props.username,\n  //         email: props.email,\n  //         telephone: props.telephone,\n  //         roles: props.roles,\n  //         description: props.description,\n  //     }\n  // });\n  //\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>Error</p>;\n  //\n  //\n  // const users = data.users;\n  console.log(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default withStyles(styles)(AddUser);","map":{"version":3,"sources":["/home/diego/Documents/school/new_test/react-app/src/APIs/graph/components/createUsers.js"],"names":["React","withStyles","useQuery","gql","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","styles","theme","button","fontSize","borderColor","color","background","height","justifyContent","table","minWidth","tableHeader","tableHeaderCell","addUser","AddUser","props","console","log"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE,SADN;AAEJC,IAAAA,WAAW,EAAE,MAFT;AAGJC,IAAAA,KAAK,EAAE,MAHH;AAIJC,IAAAA,UAAU,EAAE,SAJR;AAKJC,IAAAA,MAAM,EAAE,EALJ;AAMJC,IAAAA,cAAc,EAAE,QANZ;AAOJ,eAAW;AACPF,MAAAA,UAAU,EAAE;AADL;AAPP,GADa;AAYrBG,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP,GAZc;AAerBC,EAAAA,WAAW,EAAE;AACTL,IAAAA,UAAU,EAAE,MADH;AAETD,IAAAA,KAAK,EAAE;AAFE,GAfQ;AAmBrBO,EAAAA,eAAe,EAAE;AACbP,IAAAA,KAAK,EAAE;AADM;AAnBI,CAAL,CAApB;;AAwBA,MAAMQ,OAAO,GAAGrB,GAAI;;;;;;;;;;;;;;;;CAApB;;AAkBA,SAASsB,OAAT,CAAiBC,KAAjB,EAAwB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAOH;;AAKD,eAAgBzB,UAAU,CAACU,MAAD,CAAX,CAAqBc,OAArB,CAAf","sourcesContent":["import * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = theme => ({\n    button: {\n        fontSize: 'smaller',\n        borderColor: '#fff',\n        color: '#fff',\n        background: '#550055',\n        height: 60,\n        justifyContent: 'center',\n        '&:hover': {\n            background: '#310131',\n        },\n    },\n    table: {\n        minWidth: 650,\n    },\n    tableHeader: {\n        background: '#000',\n        color: '#fff'\n    },\n    tableHeaderCell: {\n        color: '#fff'\n    },\n});\n\nconst addUser = gql`\n    mutation ($username: String! $email: String! $telephone: Int $role: String $description: String){\n        newUser(\n            username: $username, \n            email: \"\",\n            telephone: ,\n            roles: \"\",\n            description: \"\",\n            ){\n        username\n        email\n        telephone\n        roles\n        description\n        }\n    }\n`;\n\nfunction AddUser(props) {\n    // const {data, loading, error} = useQuery(addUser, {\n    //     variables: {\n    //         username: props.username,\n    //         email: props.email,\n    //         telephone: props.telephone,\n    //         roles: props.roles,\n    //         description: props.description,\n    //     }\n    // });\n    //\n    // if (loading) return <p>Loading...</p>;\n    // if (error) return <p>Error</p>;\n    //\n    //\n    // const users = data.users;\n\n    console.log(props)\n\n    return (\n        <div>\n            <div>\n\n            </div>\n        </div>\n    );\n}\n\n\n\n\nexport default (withStyles(styles))(AddUser);"]},"metadata":{},"sourceType":"module"}