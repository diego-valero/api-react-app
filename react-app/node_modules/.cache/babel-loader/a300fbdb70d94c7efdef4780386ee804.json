{"ast":null,"code":"import Configuration from './configuration';\n\nclass ItemService {\n  constructor() {\n    this.config = new Configuration();\n  }\n\n  async retrieveItems() {\n    return fetch(this.config.ITEM_COLLECTION_URL).then(response => {\n      if (!response.ok) {\n        this.handleResponseError(response);\n      }\n\n      return response.json();\n    }).then(json => {\n      console.log(\"Retrieved items:\");\n      console.log(json);\n      const items = [];\n      const itemArray = json._embedded.collectionItems;\n\n      for (var i = 0; i < itemArray.length; i++) {\n        itemArray[i][\"link\"] = itemArray[i]._links.self.href;\n        items.push(itemArray[i]);\n      }\n\n      return items;\n    }).catch(error => {\n      this.handleError(error);\n    });\n  }\n\n  async getItem(itemLink) {\n    console.log(\"ItemService.getItem():\");\n    console.log(\"Item: \" + itemLink);\n    return fetch(itemLink).then(response => {\n      if (!response.ok) {\n        this.handleResponseError(response);\n      }\n\n      return response.json();\n    }).then(item => {\n      item[\"link\"] = item._links.self.href;\n      return item;\n    }).catch(error => {\n      this.handleError(error);\n    });\n  }\n\n  async createItem(newitem) {\n    console.log(\"ItemService.createItem():\");\n    console.log(newitem);\n    return fetch(this.config.ITEM_COLLECTION_URL, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newitem)\n    }).then(response => {\n      if (!response.ok) {\n        this.handleResponseError(response);\n      }\n\n      return response.json();\n    }).catch(error => {\n      this.handleError(error);\n    });\n  }\n\n  async deleteItem(itemlink) {\n    console.log(\"ItemService.deleteItem():\");\n    console.log(\"item: \" + itemlink);\n    return fetch(itemlink, {\n      method: \"DELETE\",\n      mode: \"cors\"\n    }).then(response => {\n      if (!response.ok) {\n        this.handleResponseError(response);\n      }\n    }).catch(error => {\n      this.handleError(error);\n    });\n  }\n\n  async updateItem(item) {\n    console.log(\"ItemService.updateItem():\");\n    console.log(item);\n    return fetch(item.link, {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    }).then(response => {\n      if (!response.ok) {\n        this.handleResponseError(response);\n      }\n\n      return response.json();\n    }).catch(error => {\n      this.handleError(error);\n    });\n  }\n\n  handleResponseError(response) {\n    throw new Error(\"HTTP error, status = \" + response.status);\n  }\n\n  handleError(error) {\n    console.log(error.message);\n  }\n\n}\n\nexport default ItemService;","map":{"version":3,"sources":["/home/diego/Documents/school/new_test/react-app/src/APIs/rest/ItemService.js"],"names":["Configuration","ItemService","constructor","config","retrieveItems","fetch","ITEM_COLLECTION_URL","then","response","ok","handleResponseError","json","console","log","items","itemArray","_embedded","collectionItems","i","length","_links","self","href","push","catch","error","handleError","getItem","itemLink","item","createItem","newitem","method","mode","headers","body","JSON","stringify","deleteItem","itemlink","updateItem","link","Error","status","message"],"mappings":"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","sourcesContent":["import Configuration from './configuration';\nclass ItemService {\n    constructor() {\n        this.config = new Configuration();\n    }\n    async retrieveItems() {\n        return fetch(this.config.ITEM_COLLECTION_URL)\n            .then(response => {\n                if (!response.ok) {\n                    this.handleResponseError(response);\n                }\n                return response.json();\n            })\n            .then(json => {\n                console.log(\"Retrieved items:\");\n                console.log(json);\n                const items = [];\n                const itemArray = json._embedded.collectionItems;\n                for(var i = 0; i < itemArray.length; i++) {\n                    itemArray[i][\"link\"] =  itemArray[i]._links.self.href;\n                    items.push(itemArray[i]);\n                }\n                return items;\n            })\n            .catch(error => {\n                this.handleError(error);\n            });\n    }\n    async getItem(itemLink) {\n        console.log(\"ItemService.getItem():\");\n        console.log(\"Item: \" + itemLink);\n        return fetch(itemLink)\n            .then(response => {\n                if (!response.ok) {\n                    this.handleResponseError(response);\n                }\n                return response.json();\n            })\n            .then(item => {\n                    item[\"link\"] = item._links.self.href;\n                    return item;\n                }\n            )\n            .catch(error => {\n                this.handleError(error);\n            });\n    }\n    async createItem(newitem) {\n        console.log(\"ItemService.createItem():\");\n        console.log(newitem);\n        return fetch(this.config.ITEM_COLLECTION_URL, {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newitem)\n        })\n            .then(response => {\n                if (!response.ok) {\n                    this.handleResponseError(response);\n                }\n                return response.json();\n            })\n            .catch(error => {\n                this.handleError(error);\n            });\n    }\n    async deleteItem(itemlink) {\n        console.log(\"ItemService.deleteItem():\");\n        console.log(\"item: \" + itemlink);\n        return fetch(itemlink, {\n            method: \"DELETE\",\n            mode: \"cors\"\n        })\n            .then(response => {\n                if (!response.ok) {\n                    this.handleResponseError(response);\n                }\n            })\n            .catch(error => {\n                this.handleError(error);\n            });\n    }\n    async updateItem(item) {\n        console.log(\"ItemService.updateItem():\");\n        console.log(item);\n        return fetch(item.link, {\n            method: \"PUT\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(item)\n        })\n            .then(response => {\n                if (!response.ok) {\n                    this.handleResponseError(response);\n                }\n                return response.json();\n            })\n            .catch(error => {\n                this.handleError(error);\n            });\n    }\n    handleResponseError(response) {\n        throw new Error(\"HTTP error, status = \" + response.status);\n    }\n    handleError(error) {\n        console.log(error.message);\n    }\n}\nexport default ItemService;"]},"metadata":{},"sourceType":"module"}