{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/school/new_test/react-app/src/APIs/graph/components/createUsers.js\";\nimport * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst styles = theme => ({});\n\nconst addUser = gql`\n    mutation ($username: String! $email: String! $telephone: Int $role: String $description: String){\n        newUser(\n            username: $username,\n            email: $email,\n            telephone: $telephone,\n            role: $role,\n            description: $description,\n            ){\n        username\n        email\n        telephone\n        role\n        description\n        }\n    }\n`;\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }));\n}\n\nfunction AddUser(props) {\n  const {\n    classes\n  } = props;\n  const {\n    data,\n    loading,\n    error\n  } = useMutation(addUser, {\n    variables: {\n      username: props.username,\n      email: props.email,\n      telephone: props.telephone,\n      role: props.role,\n      description: props.description\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, \"Error\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: true,\n    autoHideDuration: 6000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"This is a success message!\", props.username)));\n}\n\nexport default withStyles(styles)(AddUser);","map":{"version":3,"sources":["/home/diego/Documents/school/new_test/react-app/src/APIs/graph/components/createUsers.js"],"names":["React","withStyles","useQuery","useMutation","gql","Snackbar","MuiAlert","styles","theme","addUser","Alert","props","AddUser","classes","data","loading","error","variables","username","email","telephone","role","description"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK,EAAL,CAApB;;AAIA,MAAMC,OAAO,GAAGL,GAAI;;;;;;;;;;;;;;;;CAApB;;AAkBA,SAASM,KAAT,CAAeC,KAAf,EAAsB;AAClB,sBAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;AAED,SAASC,OAAT,CAAiBD,KAAjB,EAAwB;AACpB,QAAM;AAACE,IAAAA;AAAD,MAAYF,KAAlB;AACA,QAAM;AAACG,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBb,WAAW,CAACM,OAAD,EAAU;AAChDQ,IAAAA,SAAS,EAAE;AACPC,MAAAA,QAAQ,EAAEP,KAAK,CAACO,QADT;AAEPC,MAAAA,KAAK,EAAER,KAAK,CAACQ,KAFN;AAGPC,MAAAA,SAAS,EAAET,KAAK,CAACS,SAHV;AAIPC,MAAAA,IAAI,EAAEV,KAAK,CAACU,IAJL;AAKPC,MAAAA,WAAW,EAAEX,KAAK,CAACW;AALZ;AADqC,GAAV,CAA1C;AAUA,MAAIP,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AAGX,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,IAAhB;AAAsB,IAAA,gBAAgB,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEKL,KAAK,CAACO,QAFX,CADJ,CADJ,CADJ;AAUH;;AAKD,eAAgBjB,UAAU,CAACM,MAAD,CAAX,CAAqBK,OAArB,CAAf","sourcesContent":["import * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst styles = theme => ({\n\n});\n\nconst addUser = gql`\n    mutation ($username: String! $email: String! $telephone: Int $role: String $description: String){\n        newUser(\n            username: $username,\n            email: $email,\n            telephone: $telephone,\n            role: $role,\n            description: $description,\n            ){\n        username\n        email\n        telephone\n        role\n        description\n        }\n    }\n`;\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction AddUser(props) {\n    const {classes} = props\n    const {data, loading, error} = useMutation(addUser, {\n        variables: {\n            username: props.username,\n            email: props.email,\n            telephone: props.telephone,\n            role: props.role,\n            description: props.description,\n        }\n    });\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error</p>;\n\n\n    return (\n        <div>\n            <Snackbar open={true} autoHideDuration={6000}>\n                <Alert severity=\"success\">\n                    This is a success message!\n                    {props.username}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n}\n\n\n\n\nexport default (withStyles(styles))(AddUser);"]},"metadata":{},"sourceType":"module"}