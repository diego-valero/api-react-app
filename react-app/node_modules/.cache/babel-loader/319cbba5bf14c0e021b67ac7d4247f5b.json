{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/school/new_test/react-app/src/APIs/graph/components/deleteUsers.js\";\nimport * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Typography } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from \"react\";\n\nconst styles = theme => ({\n  submitButton: {\n    fontSize: 'smaller',\n    borderColor: '#fff',\n    color: '#fff',\n    background: '#550055',\n    height: 60,\n    justifyContent: 'center',\n    marginTop: 80,\n    width: '100%',\n    '&:hover': {\n      background: '#310131'\n    }\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: 400,\n    height: 600,\n    justifyContent: 'space-around',\n    margin: '0 auto'\n  }\n});\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }));\n}\n\nfunction AddUser(props) {\n  const {\n    classes\n  } = props;\n  const [newId, setId] = useState(null);\n  const [showSnackbar, setShowSnackbar] = useState(false);\n\n  const generateId = event => {\n    setId(event.currentTarget.value);\n    console.log(newId);\n  };\n\n  async function postData(url = '') {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'DELETE',\n      // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    });\n    return response; // parses JSON response into native JavaScript objects\n  }\n\n  const url = 'http://localhost:5000/restAPI/' + newId;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Select the ID of the user to be deleted:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    onSubmit: e => {\n      e.preventDefault();\n      postData(url).then(data => {\n        console.log(data); // JSON data parsed by `response.json()` call\n      });\n      setShowSnackbar(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"id\",\n    label: \"id\",\n    onChange: generateId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.submitButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Add User\")), /*#__PURE__*/React.createElement(Snackbar, {\n    open: showSnackbar,\n    autoHideDuration: 3000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"User has been deleted!\"))));\n}\n\nexport default withStyles(styles)(AddUser);","map":{"version":3,"sources":["/home/diego/Documents/school/new_test/react-app/src/APIs/graph/components/deleteUsers.js"],"names":["React","withStyles","Snackbar","MuiAlert","Typography","TextField","Button","useState","styles","theme","submitButton","fontSize","borderColor","color","background","height","justifyContent","marginTop","width","container","display","flexDirection","maxWidth","margin","Alert","props","AddUser","classes","newId","setId","showSnackbar","setShowSnackbar","generateId","event","currentTarget","value","console","log","postData","url","response","fetch","method","headers","e","preventDefault","then","data"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {useState} from \"react\";\n\n\nconst styles = theme => ({\n    submitButton: {\n        fontSize: 'smaller',\n        borderColor: '#fff',\n        color: '#fff',\n        background: '#550055',\n        height: 60,\n        justifyContent: 'center',\n        marginTop: 80,\n        width: '100%',\n        '&:hover': {\n            background: '#310131',\n        },\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: 400,\n        height: 600,\n        justifyContent: 'space-around',\n        margin: '0 auto',\n    },\n});\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction AddUser(props) {\n    const {classes} = props\n    const [newId, setId] = useState(null)\n    const [showSnackbar, setShowSnackbar] = useState(false)\n\n    const generateId = (event) => {\n        setId(event.currentTarget.value)\n        console.log(newId)\n    }\n\n    async function postData(url = '',) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n            method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n        });\n        return response // parses JSON response into native JavaScript objects\n    }\n    const url = 'http://localhost:5000/restAPI/'+newId\n    return (\n        <div>\n            <Typography>Select the ID of the user to be deleted:</Typography>\n            <div>\n                <form\n                    className={classes.container}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        postData(url)\n                            .then(data => {\n                                console.log(data); // JSON data parsed by `response.json()` call\n                            });\n                        setShowSnackbar(true)\n                    }}\n                >\n                    <TextField id=\"id\" label=\"id\" onChange={generateId}/>\n                    <Button\n                        type=\"submit\"\n                        className={classes.submitButton}\n                    >\n                        Add User\n                    </Button>\n                </form>\n                <Snackbar open={showSnackbar} autoHideDuration={3000}>\n                    <Alert severity=\"success\">\n                        User has been deleted!\n                    </Alert>\n                </Snackbar>\n            </div>\n        </div>\n    );\n}\n\n\n\n\nexport default (withStyles(styles))(AddUser);"]},"metadata":{},"sourceType":"module"}