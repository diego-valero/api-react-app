{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/school/new_test/react-app/src/APIs/rest/components/updateUsers.js\";\nimport * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Typography } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useState } from \"react\";\n\nconst styles = theme => ({\n  submitButton: {\n    fontSize: 'smaller',\n    borderColor: '#fff',\n    color: '#fff',\n    background: '#550055',\n    height: 60,\n    justifyContent: 'center',\n    marginTop: 80,\n    width: '100%',\n    '&:hover': {\n      background: '#310131'\n    }\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: 400,\n    height: 600,\n    justifyContent: 'space-around',\n    margin: '0 auto'\n  }\n});\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }\n  }));\n}\n\nfunction AddUser(props) {\n  const {\n    classes\n  } = props;\n  const [newUserData, setNewUserData] = useState({});\n  const [newId, setId] = useState(null);\n  const [showSnackbar, setShowSnackbar] = useState(false);\n\n  const onInput = event => {\n    const objData = { ...newUserData\n    };\n    objData[event.target.id] = event.currentTarget.value;\n    setNewUserData(objData);\n    console.log(newUserData);\n  };\n\n  const generateId = event => {\n    setId(event.currentTarget.value);\n    console.log(newId);\n  };\n\n  async function postData(url = '', data) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n  }\n\n  const url = 'http://localhost:5000/restAPI/' + newId;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Fill in new user info:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    onSubmit: e => {\n      e.preventDefault();\n      postData(url, newUserData).then(data => {\n        console.log(data); // JSON data parsed by `response.json()` call\n      });\n      setShowSnackbar(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"id\",\n    label: \"id\",\n    onChange: generateId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"role\",\n    label: \"Role\",\n    onChange: onInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"description\",\n    label: \"Description\",\n    onChange: onInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.submitButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Add User\")), /*#__PURE__*/React.createElement(Snackbar, {\n    open: showSnackbar,\n    autoHideDuration: 3000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"User has been updated!\"))));\n}\n\nexport default withStyles(styles)(AddUser);","map":{"version":3,"sources":["/home/diego/Documents/school/new_test/react-app/src/APIs/rest/components/updateUsers.js"],"names":["React","withStyles","useQuery","useMutation","gql","Snackbar","MuiAlert","Typography","TextField","Button","useState","styles","theme","submitButton","fontSize","borderColor","color","background","height","justifyContent","marginTop","width","container","display","flexDirection","maxWidth","margin","Alert","props","AddUser","classes","newUserData","setNewUserData","newId","setId","showSnackbar","setShowSnackbar","onInput","event","objData","target","id","currentTarget","value","console","log","generateId","postData","url","data","response","fetch","method","headers","body","JSON","stringify","json","e","preventDefault","then"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {useState} from \"react\";\n\n\nconst styles = theme => ({\n    submitButton: {\n        fontSize: 'smaller',\n        borderColor: '#fff',\n        color: '#fff',\n        background: '#550055',\n        height: 60,\n        justifyContent: 'center',\n        marginTop: 80,\n        width: '100%',\n        '&:hover': {\n            background: '#310131',\n        },\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: 400,\n        height: 600,\n        justifyContent: 'space-around',\n        margin: '0 auto',\n    },\n});\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction AddUser(props) {\n    const {classes} = props\n    const [newUserData, setNewUserData] = useState({})\n    const [newId, setId] = useState(null)\n    const [showSnackbar, setShowSnackbar] = useState(false)\n\n    const  onInput = (event) => {\n        const objData = {...newUserData}\n        objData[event.target.id] = event.currentTarget.value\n        setNewUserData(objData)\n        console.log(newUserData)\n    }\n    const generateId = (event) => {\n        setId(event.currentTarget.value)\n        console.log(newId)\n    }\n\n    async function postData(url = '', data) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        return response.json(); // parses JSON response into native JavaScript objects\n    }\n    const url = 'http://localhost:5000/restAPI/'+newId\n    return (\n        <div>\n            <Typography>Fill in new user info:</Typography>\n            <div>\n                <form\n                    className={classes.container}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        postData(url, newUserData)\n                            .then(data => {\n                                console.log(data); // JSON data parsed by `response.json()` call\n                            });\n                        setShowSnackbar(true)\n                    }}\n                >\n                    <TextField id=\"id\" label=\"id\" onChange={generateId}/>\n                    <TextField id=\"role\" label=\"Role\" onChange={onInput}/>\n                    <TextField id=\"description\" label=\"Description\" onChange={onInput}/>\n                    <Button\n                        type=\"submit\"\n                        className={classes.submitButton}\n\n                    >\n                        Add User\n                    </Button>\n                </form>\n                <Snackbar open={showSnackbar} autoHideDuration={3000}>\n                    <Alert severity=\"success\">\n                        User has been updated!\n                    </Alert>\n                </Snackbar>\n            </div>\n        </div>\n    );\n}\n\n\n\n\nexport default (withStyles(styles))(AddUser);"]},"metadata":{},"sourceType":"module"}